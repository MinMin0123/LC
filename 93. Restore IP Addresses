//https://blog.csdn.net/u012501459/article/details/46804405
class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
                vector<string> result;
        string path;
        helper(s,0,0,path,result);
        return result;
    }

    void helper(string &s,int num,int pos,string &path,vector<string>& result)
    {
        //遍历完给定字符串，并且生成了个段时
        if(pos==s.size()&&num==4)
        {
            //这里需要去除掉path最后的.
            result.push_back(path.substr(0,path.size()-1));
            return;
        }

        //如果该段包含的字符数大于规定的最大数目，那么直接退出，可以把这个判断放在下面的if中，
        //但是三个if都需要加，所以放在这儿更简洁一些。
        if(s.size()-pos>3*(4-num))
            return;

        //该段只含有一个字符
        if(pos<s.size())
        {
            path+=s.substr(pos,1)+".";
            helper(s,num+1,pos+1,path,result);
            path=path.substr(0,path.size()-2);
        }

        //该段含有两个字符，并且第一个字符不能是'0'
        if(pos<s.size()-1&&s[pos]!='0')
        {
            path+=s.substr(pos,2)+".";
            helper(s,num+1,pos+2,path,result);
            path=path.substr(0,path.size()-3);
        }

        //该段含有3个字符并且第一个字符不能是'0'，前三个字符串不能大于"255"
        if(pos<s.size()-2&&s[pos]!='0'&&s.substr(pos,3)<="255")
        {
            path+=s.substr(pos,3)+".";
            helper(s,num+1,pos+3,path,result);
            path=path.substr(0,path.size()-4);
        }

    }
};
