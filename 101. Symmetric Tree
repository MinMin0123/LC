/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 https://blog.csdn.net/hqq39/article/details/47084701
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(NULL == root) return true;
        if(NULL == root->left && NULL == root->right) return true;
        return isMirrorTree(root->left,root->right);
    }
    
    bool isMirrorTree(TreeNode* p, TreeNode* q) {
        if(NULL == p && NULL == q) return true;
        if(NULL == p || NULL == q || p->val!=q->val || !isMirrorTree(p->left,q->right) || !isMirrorTree(p->right,q->left) ) return false;
        return true;

    }
};
