class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        vector<int> dp(nums.size(), 1);
        int res = 1;
        for (int i = 1; i < nums.size(); ++i){
                        // 每次外部循环，确定以当前位置为末尾元素的最长子序列；
            for (int j = 0; j < i; ++j){
                if (nums[j] < nums[i]){
                    dp[i] = max(dp[i], 1+dp[j]);
                        // 通过遍历 j 实现对 dp[i] 的更新
                }
            }
            res = max(res, dp[i]);
        }
        return res;
    }
};
