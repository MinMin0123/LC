class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        
		int row=grid.size();
		if(row==0) return 0;
		int col=grid[0].size();
		if(col==0) return 0;
		int res=0;
		for(int i=0;i<row;i++){
			for(int j=0;j<col;j++){
				if(grid[i][j]=='1'){
					dfs(grid,i,j);
					res++;
				}
			}
		}
		return res;
	}
private:
	void dfs(vector<vector<char>>& grid,int x,int y){
		int row=grid.size(),col=grid[0].size();
		grid[x][y]='0';
		if(x>0&&grid[x-1][y]=='1'){
			dfs(grid,x-1,y);
		}
		if(x+1<row&&grid[x+1][y]=='1'){
			dfs(grid,x+1,y);
		}
		if(y>0&&grid[x][y-1]=='1'){
			dfs(grid,x,y-1);
		}
		if(y+1<col&&grid[x][y+1]=='1'){
			dfs(grid,x,y+1);
		}
    }
};
