//https://www.cnblogs.com/jdneo/p/5236373.html
class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int height = board.size();
        int width = height ? board[0].size() : 0;
        if (!height || !width) {
            return;
        }
        for (int i = 0; i < height; ++i) {
            for (int j = 0; j < width; ++j) {
                int life = getlives(board, height - 1, width - 1, i, j);
                if (board[i][j] == 1 && (life == 2 || life == 3)) {
                    board[i][j] = 3;
                } else if (board[i][j] == 0 && life == 3) {
                    board[i][j] = 2;
                }
            }
        }
        for (int i = 0; i < height; ++i) {
            for (int j = 0; j < width; ++j) {
                board[i][j] >>= 1;
            }
        }
    }
    
    int getlives(vector<vector<int>>& board, int height, int width, int i, int j) {
        int res = 0;
        for (int h = max(i-1, 0); h <= min(i+1, height); ++h) {
            for (int w = max(j-1, 0); w <= min(j+1, width); ++w) {
                res += board[h][w] & 1;
            }
        }
        res -= board[i][j] & 1;
        return res;
    }
};
